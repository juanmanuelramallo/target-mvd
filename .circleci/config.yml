version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: a8cbbcd37d4be0ca59389e3af26871a3d70c406e9655e2e04faa0b41db36da2a
    working_directory: ~/target-mvd
    docker:
      - image: circleci/ruby:2.6.2
      - image: circleci/postgres:11.2

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: cp .circleci/database.yml config/database.yml
      - run: cp .circleci/application.yml config/application.yml
      - run: RAILS_ENV=test bundle exec rake db:create
      - run: RAILS_ENV=test bundle exec rake db:schema:load

      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build

      - run:
          name: Tests
          command: |
            RAILS_ENV=test bundle exec rspec
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      - store_artifacts:
          path: coverage
